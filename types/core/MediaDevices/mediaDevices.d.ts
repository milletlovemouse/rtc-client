import CustomEventTarget from '../../utils/event';
export default class MediaDevices {
    constraints: MediaStreamConstraints;
    localStream: MediaStream;
    displayStream: MediaStream;
    locaStreamEventTaget: CustomEventTarget;
    displayStreamEventTarget: CustomEventTarget;
    locaStreamTrackEventTargets: CustomEventTarget[];
    displayStreamTrackEventTargets: CustomEventTarget[];
    constructor(constraints: MediaStreamConstraints);
    private getUserStream;
    getUserMedia(): Promise<MediaStream>;
    getUserVideoMedia(): Promise<MediaStream>;
    getUserAudioMedia(): Promise<MediaStream>;
    getDisplayMedia(): Promise<MediaStream>;
    static enumerateDevices(): Promise<MediaDeviceInfo[]>;
    static getSupportedConstraints(): MediaTrackSupportedConstraints;
    getUserMediaStreamTracks(): Promise<MediaStreamTrack[]>;
    getUserAudioTracks(): Promise<MediaStreamTrack[]>;
    getUserVideoTracks(): Promise<MediaStreamTrack[]>;
    getDisplayMediaStreamTracks(): Promise<MediaStreamTrack[]>;
    getDisplayAudioTracks(): Promise<MediaStreamTrack[]>;
    getDisplayVideoTracks(): Promise<MediaStreamTrack[]>;
    addTrack(track: MediaStreamTrack | MediaStreamTrack[], stream: MediaStream): void;
    removeTrack(track: MediaStreamTrack | MediaStreamTrack[], stream: MediaStream): void;
    startUserMediaStreamTrack(id?: string): Promise<void>;
    stopUserMediaStreamTrack(id?: string): Promise<void>;
    startDisplayMediaStreamTrack(id?: string): Promise<void>;
    stopDisplayMediaStreamTrack(id?: string): Promise<void>;
    closeUserMediaStream(): void;
    closeDisplayMediaStream(): void;
    close(): void;
}
